
#include "transaction.h"//GPRS单元
#include "delay.h"//
#include "usart1.h"
#include "modbus_tcp.h"//


unsigned char Input_Key = KEY_NULL; //输入键值
unsigned char Transaction_Finished = NO; //交易完成标志
unsigned char Commodity_Id = 0; //商品ID
unsigned char Commodity_Lack = 0; //商品缺货标志
unsigned char Pay_Status = PAY_FAILED; //支付状态
unsigned char PayWaitTime = PAY_WAITTIME; //支付等待时间
//
transaction_info_struct Device_Transaction_Info;	//该设备商品信息
transaction_status_struct Device_Transaction_Status;	//该设备商品状态






/*
扫描键值
*/
unsigned char Key_Scan(void)
{
    unsigned char key_value;

    return key_value;
}



/*
根据键值确定商品编号
*/
unsigned char Key2CDID(unsigned char key)
{
    unsigned char id;
    //
    id = key;

    return id;
}

/*
根据商品编号查询库存
*/
unsigned char Commodity_ReserveCheck(unsigned char id)
{
    unsigned char res = 0;
    unsigned int wait_time = MB_RECWAITTIME;
    mb_info_struct mb_check;

    mb_check.Slave_ID = 1;
    mb_check.Func_Code = 0x03;
    mb_check.Reg_BeginAddr = ((id - 1) << 2);
    mb_check.Reg_Num = 4;

    //读取商品库存信息
    modbus_send_cmd(&mb_check);
    //返回商品缺货状态
    while(((USART1_RX_STA & 0x8000) == 0) && (wait_time > 0))
    {
        delay_ms(100);
        wait_time--;
    }
    if(wait_time != 0) //收到响应	,拆包数据
    {
        if((USART1_RX_STA & 0x8000) != 0)
        {
            USART1_RX_STA = 0;
            if(TcpServer_ReadDataBuf[0] == id)
            {
                Device_Transaction_Info.Transaction_Num = TcpServer_ReadDataBuf[1];
                Device_Transaction_Info.Transaction_Price = TcpServer_ReadDataBuf[2];
                res = Device_Transaction_Info.Transaction_Num;
            }
        }
    }
    else//响应失败
    {
        res = 0;
    }
    return res;
}

/*
查询商品支付状态*/
unsigned char CheckPay_Status(unsigned char id)
{
    unsigned char res = PAY_FAILED;
    unsigned int wait_time = MB_RECWAITTIME;
    mb_info_struct mb_check;

    mb_check.Slave_ID = 1;
    mb_check.Func_Code = 0x03;
    mb_check.Reg_BeginAddr = ((id - 1) << 2) + 40;
    mb_check.Reg_Num = 4;

    //读取商品支付状态
    modbus_send_cmd(&mb_check);
    //返回商品支付状态
    while((USART1_RX_STA & 0x8000) == 0 && (wait_time > 0))
    {
        delay_ms(100);
        wait_time--;
    }
    if(wait_time != 0) //收到响应	,拆包数据
    {
        if((USART1_RX_STA & 0x8000) != 0)
        {
            USART1_RX_STA = 0;
            if(TcpServer_ReadDataBuf[0] == id)
            {
                Device_Transaction_Status.Transaction_Status = TcpServer_ReadDataBuf[1];
                Device_Transaction_Status.Transaction_BuyRequest = TcpServer_ReadDataBuf[2];
                Device_Transaction_Status.Transaction_PayStatus = TcpServer_ReadDataBuf[3];
                if(Device_Transaction_Status.Transaction_PayStatus == PAY_SUCCESSED)
                {
                    res = PAY_SUCCESSED;
                }
            }
        }

    }
    else//响应失败
    {
        res = PAY_FAILED;
    }
    return res;
}

/*
置位购买请求
*/
mb_info_struct mb_check;
unsigned char PushBuy_Request(unsigned char id)
{
    unsigned char res = REQUEST_FAILED;
    unsigned int wait_time = MB_RECWAITTIME;

    mb_check.Slave_ID = 1;
    mb_check.Func_Code = 0x10;
    mb_check.Reg_BeginAddr = ((id - 1) << 2) + 2 + 40;
    mb_check.Reg_Num = 1;
    mb_check.Data_Buf[0] = 0x0001;


    //置位商品购买请求
    modbus_send_cmd(&mb_check);
    //返回购买请求
    while((USART1_RX_STA & 0x8000) == 0 && (wait_time > 0))
    {
        delay_ms(100);
        wait_time--;
    }
    if(wait_time != 0) //收到响应	,拆包数据
    {
        if((USART1_RX_STA & 0x8000) != 0)
        {
            USART1_RX_STA = 0;
            res = REQUEST_SUCCESSED;
        }
    }
    else//响应失败
    {
        res = REQUEST_FAILED;
    }
    return res;
}



/*
恢复设备到售货初始状态
*/
void ResetDevice2InitSellMode(void)
{
}

/*
显示商品缺货信息
*/
void LcdShow_TransactionLack(void)
{
}

/*
显示单价及等待付款信息
*/
void LcdShow_WaitPay(void)
{
}

/*
显示付款超时提示信息
*/
void LcdShow_PayOutTime(void)
{
}

/*
显示付款成功示信息
*/
void LcdShow_PayComplete(void)
{
}




/*

*/
void Transaction_Process(unsigned char id)
{
    //根据键值确定商品编码
    Device_Transaction_Info.Transaction_ID = Key2CDID(id);
    //查询商品库存
    Device_Transaction_Info.Transaction_Num = Commodity_ReserveCheck(Device_Transaction_Info.Transaction_ID);
    //
    if(Device_Transaction_Info.Transaction_Num == 0) //缺货
    {
        //输出相关信息
				LcdShow_TransactionLack();
        //复位设备状态
        ResetDevice2InitSellMode();
    }
    else//不缺货
    {
        //输出付款信息、提示用户进行付款
        LcdShow_WaitPay();
        //置商品购买请求
        PushBuy_Request(Device_Transaction_Info.Transaction_ID);
        //查询支付状态（超时等待）
        PayWaitTime = PAY_WAITTIME;
			do
			{
				 Device_Transaction_Status.Transaction_Status = CheckPay_Status(Device_Transaction_Info.Transaction_ID);
            delay_ms( 1000);
            PayWaitTime--;
			}while((Device_Transaction_Status.Transaction_Status != PAY_SUCCESSED) && (PayWaitTime != 0));
        if(Device_Transaction_Status.Transaction_Status == PAY_SUCCESSED) //支付成功
        {
            //
            LcdShow_PayComplete();
            //通知动作执行机构发货
            Transaction_Finished = YES;
        } else//支付超时-输出相关信息、复位设备状态
        {
            //
            LcdShow_PayOutTime();
            //
            ResetDevice2InitSellMode();
        }
    }
}

/*

*/
void NoticeDevice_Action(void)
{
    //通过向动作执行机构发送can指令来启动出货



}





































